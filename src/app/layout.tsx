'use client'
// import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'
import LenisProvider from '@/libs/react-lenis'
import { Providers } from './providers'
import { useState } from 'react'
import dynamic from 'next/dynamic'

const inter = Inter({ subsets: ['latin'] })
const Particles = dynamic(() => import('@/components/TsParticles/page'))
// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const [isRendered, setIsRendered] = useState(false)
  const renderStatus = () => {
    setIsRendered(true)
    // setTimeout(() => {
    // }, 100);
  }
  return (
    <LenisProvider root>
      <html lang="en">
        <body className={inter.className}>
          <Particles status={renderStatus}/>
          {
            isRendered ? (
              <div className="flex justify-center overflow-x-auto">
                <Providers>{children}</Providers>
              </div>
            ): null
          }
        </body>
      </html>
    </LenisProvider>
  )
}
